-- ============================================================
-- SCRIPT PARA VERIFICAR E CRIAR BUCKET ESPEC√çFICO
-- ============================================================

DO $$
BEGIN
    RAISE NOTICE 'üîç VERIFICANDO BUCKET ESPEC√çFICO...';
    
    -- Verificar se o bucket existe
    IF EXISTS (
        SELECT 1 FROM storage.buckets 
        WHERE name = 'documentos-propostas-corretores'
    ) THEN
        RAISE NOTICE '‚úÖ Bucket "documentos-propostas-corretores" EXISTE!';
        
        -- Mostrar configura√ß√µes do bucket
        SELECT 
            name,
            public,
            file_size_limit,
            allowed_mime_types
        FROM storage.buckets 
        WHERE name = 'documentos-propostas-corretores';
        
    ELSE
        RAISE NOTICE '‚ùå Bucket "documentos-propostas-corretores" N√ÉO EXISTE!';
        RAISE NOTICE 'üèóÔ∏è Criando bucket...';
        
        -- Criar o bucket
        INSERT INTO storage.buckets (id, name, public, file_size_limit, allowed_mime_types)
        VALUES (
            'documentos-propostas-corretores',
            'documentos-propostas-corretores',
            true,
            52428800, -- 50MB
            ARRAY['image/jpeg', 'image/png', 'application/pdf', 'image/jpg']
        );
        
        RAISE NOTICE '‚úÖ Bucket criado com sucesso!';
    END IF;
    
    RAISE NOTICE 'üìä LISTANDO TODOS OS BUCKETS:';
END $$;

-- Listar todos os buckets
SELECT 
    'üì¶ ' || name as bucket_name,
    CASE WHEN public THEN 'üåê P√∫blico' ELSE 'üîí Privado' END as visibilidade,
    CASE 
        WHEN file_size_limit IS NOT NULL 
        THEN 'üìè ' || ROUND(file_size_limit / 1024.0 / 1024.0, 1) || 'MB'
        ELSE 'üìè Sem limite'
    END as limite_tamanho
FROM storage.buckets
ORDER BY name;
